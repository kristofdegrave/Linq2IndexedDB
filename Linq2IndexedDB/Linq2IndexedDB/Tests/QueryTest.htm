<!DOCTYPE html>
<html>
    <head>
        <title>Tests</title>
        <link href="qunit.css" rel="stylesheet" type="text/css" />
        <script src="../Scripts/jquery-1.7.1.js" type="text/javascript">
        </script>
        <script src="qunit.js" type="text/javascript">
        </script>
        <script src="../Scripts/Linq2IndexedDB.js" type="text/javascript">
        </script>
        <script type = "text/javascript">
            var sample = {
            	obj: function(){
            		return {
            			"String": "Sample " + new Date(),
            			"Int": this.integer(),
            			"Float": Math.random(),
            			"Boolean": true
            		}
            	},
            	integer: function(arg){
            		return parseInt(Math.random() * (arg || 100));
            	}
            };
        </script>
        <script type="text/javascript">
            $(document).ready(function(){
            	module("Where Clauses");
            	
            	asyncTest("Intial Insert", function(){
            		var db = $.linq2indexedDB("QueryTest", null, true);
            		db.linq.from("test").insert(sample.obj()).then(function(){
            			ok(true, "Data Added to table successfully ");
            			start();
            		}, function(){
            			ok(false, "Could not add data ");
            			start();
            		});
            	});
            	
            	asyncTest("Simple select", function(){
            		var db = $.linq2indexedDB("QueryTest", null, true);
            		db.linq.from("test").select().then(function(data){
            			ok(true, "Selected " + data.length + " items");
            			start();
            		}, function(){
            			ok(false, "");
            			start();
            		});
            	});
            	
            	asyncTest("Where Clause", function(){
            		var db = $.linq2indexedDB("QueryTest", null, true);
            		db.linq.from("test").where("Int").equals(1).select().then(function(data){
            			for (var i = 0; i < data.length; i++) {
            				if (data[i]["Int"] !== 1) {
            					ok(false, "Value is not 1");
            				}
            			}
            			ok(true, "Looked at " + data.length + " items, and all match condition");
            			start();
            		}, function(){
            			start();
            		});
            	});
            	
            	asyncTest("Where Clause with Boolean condition", function(){
            		var db = $.linq2indexedDB("QueryTest", null, true);
            		db.linq.from("test").where("Int").equals(true).select().then(function(data){
            			if (data.length === 0) {
            				ok(false, "No items are true, this is incorrect");
            			} else {
            				ok(true, "All true values selected " + data.length);
            			}
            			start();
            		}, function(){
            			ok(false, "Could not select data");
            			start();
            		});
            	});
            	
            	asyncTest("Simple sorting", function(){
            		var db = $.linq2indexedDB("QueryTest", null, true);
            		db.linq.from("test").orderBy("Int").select().then(function(data){
            			var min = Math.min;
            			for (var i = 0; i < data.length; i++) {
            				if (data[i]["Int"] < min) {
            					ok(false, "Data is not sorted");
            				}
            				min = data[i]["Int"];
            			}
            			ok(true, "All " + data.length + " values are sorted");
            			start();
            		}, function(){
            			ok(false, "Could not sort data");
            			start();
            		});
            	});
            	
            });
        </script>
    </head>
    <body>
        <h1 id="qunit-header">Linq Test</h1>
        <h2 id="qunit-banner"></h2>
        <h2 id="qunit-userAgent"></h2>
        <ol id="qunit-tests">
        </ol>
    </body>
</html>
