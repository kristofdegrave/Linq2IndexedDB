<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title></title>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <style type="text/css">
            #txtLog {
                height: 200px;
                width: 1000px;
            }
        </style>
        <script src="../Scripts/jquery-1.8.3.js" type="text/javascript"> </script>
        <script type="text/javascript" src="../Scripts/IndexedDBShim.min.js"> </script>
        <script src="../Scripts/Linq2IndexedDB.js" type="text/javascript"> </script>
        <script type="text/javascript">
            $(function () {
                var applicationVersion = 1;
                var indexedDBName = "inserts";
                var databaseDefinition = [{
                    version: 1,
                    objectStores: [{ name: "insert", objectStoreOptions: { autoIncrement: true, keyPath: "Id" } }]
                }];
                
                var dbConfig = new Object();
                dbConfig.version = applicationVersion;
                dbConfig.definition = databaseDefinition;

                var db = new linq2indexedDB.DbContext(indexedDBName, dbConfig, false);

                db.deleteDatabase().then(function () {
                    var list = [];
                    for (var i = 0; i < 50000; i++) {
                        list.push({ data: "data", key: i + 1 });
                    }
                    db.initialize().then(function () {
                        var start = new Date().getTime();
                        db.from("insert").insert(list).then(function () {
                            var stop = new Date().getTime();
                            $("#txtLog").val("Write: " + (stop - start));

                            start = new Date().getTime();
                            db.from("insert").select().then(function () {
                                var stop = new Date().getTime();
                                $("#txtLog").val($("#txtLog").val() + "\r Read: " + (stop - start));
                            });
                        });
                    });
                });

                //db.deleteDatabase().then(function () {
                //    $("#txtLog").val("");
                //    db.initialize();
                //    var start = new Date().getTime();
                //    var dbconn = linq2indexedDB.core.db("inserts");
                //    var trans = linq2indexedDB.core.transaction(dbconn, ["insert"], IDBTransaction.READ_WRITE);
                //    var obj = linq2indexedDB.core.objectStore(trans, "insert");
                //    obj.then(function (args) {
                //        objectstore = args[1];
                //        for (var i = 0; i < 50000; i++) {
                //            var req = objectstore.add({ data: "data" });
                //        }

                //    });
                //    trans.then(function () {
                //        var stop = new Date().getTime();
                //        $("#txtLog").val(stop - start);
                //    });
                //    //for (var i = 0; i < 5000; i++) {
                //        //linq2indexedDB.core.insert(obj, { data: "data" }).then(function (e) {
                //        //        var tekst = $("#txtLog").val();
                //        //        tekst += new Date() + " Key: " + e[1] + "\r";
                //        //        $("#txtLog").val(tekst);
                //        //    }, function (e) {
                //        //        var d = e;
                //        //    });
                //        //db.from("insert").insert({ data: "data" }).then(function (e) {
                //        //    var tekst = $("#txtLog").val();
                //        //    tekst += new Date() + " Key: " + e.key + "\r";
                //        //    $("#txtLog").val(tekst);
                //        //}, function (e) {
                //        //    var d = e;
                //        //});
                //    //}
                //});

                //linq2indexedDB.logging.enabled = true;
                //linq2indexedDB.core.deleteDb("inserts").then(function () {
                //        $("#txtLog").val("");
                //        var start = new Date().getTime();
                //        var dbconn = linq2indexedDB.core.db("inserts", 1);
                //        var trans = linq2indexedDB.core.transaction(dbconn, ["insert"], IDBTransaction.READ_WRITE, true);
                //        var obj = linq2indexedDB.core.objectStore(trans, "insert");
                //        //obj.then(function (args) {
                //        //    objectstore = args[1];
                //        //    for (var i = 0; i < 5000; i++) {
                //        //        var req = objectstore.add({ data: "data" });
                //        //    }

                //        //});
                //        trans.then(function () {
                //            var stop = new Date().getTime();
                //            var tekst = $("#txtLog").val();
                //            tekst += "\r";
                //            tekst += stop - start;
                //            $("#txtLog").val(tekst);
                //        }, function () {
                //        },
                //        function () {
                //            start = new Date().getTime();
                //        });

                //        var list = [];

                //        for (var i = 0; i < 50000; i++) {
                //            list.push({ data: "data", key: i+1 });
                //            //linq2indexedDB.core.insert(obj, { data: "data" });//.then(function (e) {
                //            //        var tekst = $("#txtLog").val();
                //            //        tekst += new Date() + " Key: " + e[1] + "\r";
                //            //        $("#txtLog").val(tekst);
                //            //    }, function (e) {
                //            //        var d = e;
                //            //    });
                //            //db.from("insert").insert({ data: "data" }).then(function (e) {
                //            //    var tekst = $("#txtLog").val();
                //            //    tekst += new Date() + " Key: " + e.key + "\r";
                //            //    $("#txtLog").val(tekst);
                //            //}, function (e) {
                //            //    var d = e;
                //            //});
                //        }
                //        linq2indexedDB.core.insertBatch(obj, list);
                //        //db.from("insert").insert({ data: "data" })
                //    });
            });
        </script>
    </head>
    <body>
        <textarea id="txtLog"></textarea>
    </body>
</html>