"use strict";var linq2indexedDB=linq2indexedDB||{},win=typeof window!="undefined"?window:undefined,$=typeof window!="undefined"&&typeof window.jQuery!="undefined"?window.jQuery:undefined;Array.prototype.contains=function(n){return this.indexOf(n)>-1},function(n){n.about={version:"1.1.0",author:"Kristof Degrave",license:"http://linq2indexeddb.codeplex.com/license",sources:"http://linq2indexeddb.codeplex.com/"}}(linq2indexedDB),function(n){function t(){this._listeners={}}t.prototype={constructor:t,addListener:function(t,i){n.util.isArray(t)||(t=[t]);for(var r=0;r<t.length;r++)typeof this._listeners[t[r]]=="undefined"&&(this._listeners[t[r]]=[]),this._listeners[t[r]].push(i)},fire:function(n){var i,t,r;if(typeof n=="string"&&(n={type:n}),n.target||(n.target=this),!n.type)throw new Error("Event object missing 'type' property.");if(this._listeners[n.type]instanceof Array)for(i=this._listeners[n.type],t=0,r=i.length;t<r;t++)i[t].call(this,n)},removeListener:function(t,i){var r,f,u,e;for(n.util.isArray(t)||(t=[t]),r=0;r<t[r].length;r++)if(this._listeners[t[r]]instanceof Array)for(f=this._listeners[t[r]],u=0,e=f.length;u<e;u++)if(f[u]===i){f.splice(u,1);break}}},n.Event=t}(linq2indexedDB),function(n){function r(i){var f,r,u;if(typeof console=="undefined"||!n.logging.enabled)return!1;for(f=function(){var n=new Date;return n.getHours()+":"+n.getMinutes()+":"+n.getSeconds()+"."+n.getMilliseconds()}(),r=[],r.push(f),u=1;u<arguments.length;u++)r.push(arguments[u]);switch(i){case t.exception:r[0]+=" Linq2IndexedDB Exception: ",console.exception.apply(console,r);break;case t.error:r[0]+=" Linq2IndexedDB Error: ",console.error.apply(console,r);break;case t.warning:r[0]+=" Linq2IndexedDB Warning: ",console.warning.apply(console,r);break;case t.information:r[0]+=" Linq2IndexedDB Info: ",console.log.apply(console,r);break;default:r[0]+=" Linq2IndexedDB: ",console.log.apply(console,r)}return!0}function u(n){return r(n.severity,n.message,n.type,n.method,n.orignialError)}var t={information:0,warning:1,error:2,exception:3},i="undefined";typeof console!==i&&(typeof console.warning===i&&(console.warning=typeof console.warn===i?console.log:console.warn),typeof console.error===i&&(console.error=console.log),typeof console.exception===i&&(console.exception=console.error)),n.logging={debug:function(n){this.enabled=!!n,this.log(t.warning,"Debugging enabled: be carefull when using in production enviroment. Complex objects get written to  the log and may cause memory leaks.")},log:r,logError:u,severity:t,enabled:!1}}(linq2indexedDB),function(n){function t(n,t){return{sort:function(i,r){return t?i[n]==r[n]?0:i[n]>r[n]?-1:1:i[n]==r[n]?0:i[n]>r[n]?1:-1}}}function i(n,t){return typeof t=="function"?t.toString():t}function r(n,t){if(t&&typeof t=="string"&&t.substr(0,8)=="function"){var i=t.indexOf("{")+1,r=t.lastIndexOf("}"),u=t.indexOf("(")+1,f=t.indexOf(")");return new Function(t.substring(u,f),t.substring(i,r))}return t}function u(n,t){for(var u=t.split("."),i=n,r=0;r<u.length;r++)i&&(i=i[u[r]]);return i}function f(n,t,i){for(var u=t.split("."),f=n,r=0;r<u.length;r++)r!=u.length-1?(f[u[r]]={},f=f[u[r]]):f[u[r]]=i;return f}n.json={comparer:t,serialize:i,deserialize:r,getPropertyValue:u,setPropertyValue:f}}(linq2indexedDB),function(n){function t(n){return n instanceof Array?!0:!1}n.util={isArray:t}}(linq2indexedDB),function(n,t,i){function r(n){return t.Deferred(function(t){n({complete:function(n,i){t.resolveWith(n,[i])},error:function(n,i){t.rejectWith(n,[i])},progress:function(n,i){t.notifyWith(n,[i])}})}).promise()}if(typeof n!="undefined"&&(typeof t=="undefined"||typeof t.Deferred=="undefined"))throw"linq2indexedDB: No jQuery framework that supports promises found. Please ensure jQuery is referenced before the linq2indexedDB.js file and the version is higher then 1.7.1";i.promises={promise:r}}(win,$,linq2indexedDB),function(n,t,i){function k(n){var t=parseInt(n.version);return isNaN(t)||t<0?0:t}function e(n,i){return{code:n.code,severity:t.logging.severity.exception,orignialError:n,method:i,type:"unknown"}}function w(n,i){return{severity:t.logging.severity.error,orignialError:n,type:n.target&&n.target.error&&n.target.error.name?n.target.error.name:"unknown",method:i}}function l(i){var r;i instanceof n.IDBCursor&&(i=i.source),i instanceof n.IDBDatabase?r=i:i instanceof n.IDBTransaction?r=i.db:i instanceof n.IDBObjectStore||i instanceof n.IDBRequest?r=i.transaction.db:i instanceof n.IDBIndex&&(r=i.objectStore.transaction.db),typeof r!="undefined"&&r!=null&&typeof r.close!="undefined"&&(t.logging.log(t.logging.severity.information,"Close database Connection: ",r),r.close())}function f(n){t.logging.log(t.logging.severity.information,"Abort transaction: "+n),p!=c.MICROSOFT&&(n.abort(),l(n))}function it(){if(typeof n=="undefined")return c.NONE;if(n.indexedDB)return!n.IDBObjectStore&&n.webkitIDBObjectStore&&(n.IDBObjectStore=n.webkitIDBObjectStore),!n.IDBRequest&&n.webkitIDBRequest&&(n.IDBRequest=n.webkitIDBRequest),t.logging.log(t.logging.severity.information,"Native implementation",n.indexedDB),c.NATIVE;if(n.mozIndexedDB)return n.indexedDB=n.mozIndexedDB,typeof n.IDBTransaction.READ_ONLY=="number"&&typeof n.IDBTransaction.READ_WRITE=="number"&&typeof n.IDBTransaction.VERSION_CHANGE=="number"&&(h.READ_ONLY=n.IDBTransaction.READ_ONLY,h.READ_WRITE=n.IDBTransaction.READ_WRITE,h.VERSION_CHANGE=n.IDBTransaction.VERSION_CHANGE),t.logging.log(t.logging.severity.information,"FireFox Initialized",n.indexedDB),c.MOZILLA;if(n.webkitIndexedDB)return n.indexedDB||(n.indexedDB=n.webkitIndexedDB),n.IDBCursor||(n.IDBCursor=n.webkitIDBCursor),n.IDBDatabase||(n.IDBDatabase=n.webkitIDBDatabase),n.IDBDatabaseException||(n.IDBDatabaseException=n.webkitIDBDatabaseException),n.IDBFactory||(n.IDBFactory=n.webkitIDBFactory),n.IDBIndex||(n.IDBIndex=n.webkitIDBIndex),n.IDBKeyRange||(n.IDBKeyRange=n.webkitIDBKeyRange),n.IDBObjectStore||(n.IDBObjectStore=n.webkitIDBObjectStore),n.IDBRequest||(n.IDBRequest=n.webkitIDBRequest),n.IDBTransaction||(n.IDBTransaction=n.webkitIDBTransaction),n.IDBOpenDBRequest||(n.IDBOpenDBRequest=n.webkitIDBOpenDBRequest),typeof n.IDBTransaction.READ_ONLY=="number"&&typeof n.IDBTransaction.READ_WRITE=="number"&&typeof n.IDBTransaction.VERSION_CHANGE=="number"&&(h.READ_ONLY=n.IDBTransaction.READ_ONLY,h.READ_WRITE=n.IDBTransaction.READ_WRITE,h.VERSION_CHANGE=n.IDBTransaction.VERSION_CHANGE),t.logging.log(t.logging.severity.information,"Chrome Initialized",n.indexedDB),c.GOOGLE;if(n.msIndexedDB)return n.indexedDB=n.msIndexedDB,h.READ_ONLY=0,h.READ_WRITE=1,h.VERSION_CHANGE=2,t.logging.log(t.logging.severity.information,"IE10+ Initialized",n.indexedDB),c.MICROSOFT;if(navigator.appName=="Microsoft Internet Explorer"){try{n.indexedDB=new ActiveXObject("SQLCE.Factory.4.0"),n.indexedDBSync=new ActiveXObject("SQLCE.FactorySync.4.0")}catch(r){t.logging.log(t.logging.severity.information,"Initializing IE prototype exception",r)}if(n.JSON)n.indexedDB.json=n.JSON,n.indexedDBSync.json=n.JSON;else{var i={parse:function(n){if(n==="[]")return[];if(n==="{}")return{};throw{message:"Unrecognized JSON to parse: "+n};}};n.indexedDB.json=i,n.indexedDBSync.json=i}return n.IDBDatabaseException={UNKNOWN_ERR:0,NON_TRANSIENT_ERR:1,NOT_FOUND_ERR:2,CONSTRAINT_ERR:3,DATA_ERR:4,NOT_ALLOWED_ERR:5,SERIAL_ERR:11,RECOVERABLE_ERR:21,TRANSIENT_ERR:31,TIMEOUT_ERR:32,DEADLOCK_ERR:33},n.IDBKeyRange={SINGLE:0,LEFT_OPEN:1,RIGHT_OPEN:2,LEFT_BOUND:4,RIGHT_BOUND:8},n.IDBRequest={INITIAL:0,LOADING:1,DONE:2},n.IDBTransaction={READ_ONLY:0,READ_WRITE:1,VERSION_CHANGE:2},h.READ_ONLY=0,h.READ_WRITE=1,h.VERSION_CHANGE=2,n.IDBKeyRange.only=function(t){return n.indexedDB.range.only(t)},n.IDBKeyRange.leftBound=function(t,i){return n.indexedDB.range.lowerBound(t,i)},n.IDBKeyRange.rightBound=function(t,i){return n.indexedDB.range.upperBound(t,i)},n.IDBKeyRange.bound=function(t,i,r,u){return n.indexedDB.range.bound(t,i,r,u)},n.IDBKeyRange.lowerBound=function(t,i){return n.IDBKeyRange.leftBound(t,i)},c.MICROSOFTPROTOTYPE}return t.logging.log(t.logging.severity.information,"Your browser doesn't support indexedDB."),c.NONE}function v(n,i){return t.promises.promise(function(t){try{n(t,i)}catch(r){r.type="exception",t.error(i,[r.message,r])}finally{i=null}})}function rt(n,t){t.onsuccess=function(t){n.complete(t.target,[t.target.result,t])}}function b(n,t){t.onerror=function(t){t?n.error(t.target,[t.target.errorCode,t]):n.error(this,[this,this])}}function d(n,t){t.onabort=function(t){t?n.error(t.target,[t.target.errorCode,t]):n.error(this,[this,this])}}function ut(n,t){t.onversionchange=function(t){n.progress(t.target,[t.target.result,t])}}function ft(n,t){t.oncomplete=function(t){t?n.complete(t.target,[t.target,t]):n.complete(this,[this])}}function g(n,t){rt(n,t),b(n,t)}function et(n,t){t.onsuccess=function(t){t.target.result?n.progress(t.target,[t.target.result,t]):n.complete(t.target,[t.target.result,t])},b(n,t)}function nt(n,t){g(n,t),t.onblocked=function(t){n.progress(t.target,["blocked",t])}}function ot(n,t){nt(n,t),t.onupgradeneeded=function(t){n.progress(t.target,[t.target.transaction,t])}}function st(n,t){d(n,t),b(n,t),ut(n,t)}function ht(n,t){ft(n,t),d(n,t),b(n,t)}var tt="Default",c={NONE:0,NATIVE:1,MICROSOFT:2,MOZILLA:3,GOOGLE:4,MICROSOFTPROTOTYPE:5,SHIM:6},h={READ_ONLY:"readonly",READ_WRITE:"readwrite",VERSION_CHANGE:"versionchange"},p=it(),o={IDBRequest:function(n){return v(g,n)},IDBBlockedRequest:function(n){return v(nt,n)},IDBOpenDBRequest:function(n){return v(ot,n)},IDBDatabase:function(n){return v(st,n)},IDBTransaction:function(n){return v(ht,n)},IDBCursorRequest:function(n){return v(et,n)}},s={objectStoreCreated:"Object store created",objectStoreRemoved:"Object store removed",indexCreated:"Index created",indexRemoved:"Index removed",databaseRemoved:"Database removed",databaseBlocked:"Database blocked",databaseUpgrade:"Database upgrade",databaseOpened:"Database opened"},y={dataInserted:"Data inserted",dataUpdated:"Data updated",dataRemoved:"Data removed",objectStoreCleared:"Object store cleared"},a=!1,u={db:function(i,f,h){var v,a;try{f=f?f:tt,h?(t.logging.log(t.logging.severity.information,"db opening",f,h),v=n.indexedDB.open(f,h)):(t.logging.log(t.logging.severity.information,"db opening",f),v=n.indexedDB.open(f)),o.IDBOpenDBRequest(v).then(function(n){var f=n[0],c=n[1],e,a;o.IDBDatabase(f).then(function(){},function(n){l(n[1].target)},function(n){var t=n[1];t&&t.type==="versionchange"&&t.version!=t.target.version&&l(t.target)}),e=k(f),f.setVersion&&(e<h||h==-1||e=="")?(t.logging.log(t.logging.severity.information,"DB Promise upgradeneeded",this,f,c),u.changeDatabaseStructure(f,h||1).then(function(t){var f=t[0],l=t[1],c=f.db,u;c.transaction=f,u={},u.type="upgradeneeded",u.newVersion=h,u.oldVersion=e,u.originalEvent=l,r.dbStructureChanged.fire({type:s.databaseUpgrade,data:u}),i.progress(c,[f,u]),o.IDBTransaction(f).then(function(){i.complete(this,n)},function(n){i.error(this,n)})},function(n){i.error(this,n)},function(n){r.dbStructureChanged.fire({type:s.databaseBlocked,data:n}),i.progress(this,n)})):h&&h<e?(l(f),a={severity:t.logging.severity.error,type:"VersionError",message:"You are trying to open the database in a lower version ("+h+") than the current version of the database",method:"db"},t.logging.logError(a),i.error(this,a)):(r.dbStructureChanged.fire({type:s.databaseOpened,data:f}),t.logging.log(t.logging.severity.information,"DB Promise resolved",f,c),i.complete(this,[f,c]))},function(n){var r=w(n[1],"db");n[1].target&&n[1].target.errorCode==12&&(r.type="VersionError"),r.type=="VersionError"&&(r.message="You are trying to open the database in a lower version ("+h+") than the current version of the database"),n[1].target&&n[1].target.errorCode==8&&(r.type="AbortError"),r.type=="AbortError"&&(r.message="The VERSION_CHANGE transaction was aborted."),t.logging.logError(r),i.error(this,r)},function(n){n[1].type=="blocked"?r.dbStructureChanged.fire({type:s.databaseBlocked,data:n}):n[1].type=="upgradeneeded"&&r.dbStructureChanged.fire({type:s.databaseUpgrade,data:n}),i.progress(this,n)})}catch(c){a=e(c,"db"),(c.INVALID_ACCESS_ERR&&c.code==c.INVALID_ACCESS_ERR||c.name=="InvalidAccessError")&&(a.type="InvalidAccessError",a.message="You are trying to open a database with a negative version number."),t.logging.logError(a),i.error(this,a)}},transaction:function(n,i,u,f,s){var y,p,b,v,g,d;t.logging.log(t.logging.severity.information,"Transaction promise started",i,u,f),t.util.isArray(u)||(u=[u]),f=f||h.READ_ONLY,y=[];try{for(p=0;p<u.length;p++)i.objectStoreNames&&i.objectStoreNames.contains(u[p])||y.push(u[p]);y.length>0&&s?setTimeout(function(e){a=!0;var s=k(i)+1,h=e.name;t.logging.log(t.logging.severity.information,"Transaction database upgrade needed: ",e),l(e),r.db(h,s).then(function(i){a=!1;var r=i[0].transaction(u,f);o.IDBTransaction(r).then(function(i){t.logging.log(t.logging.severity.information,"Transaction completed.",r),n.complete(this,i)},function(i){t.logging.log(t.logging.severity.error,"Transaction error/abort.",i),n.error(this,i)}),t.logging.log(t.logging.severity.information,"Transaction created.",r),n.progress(r,[r])},function(i){t.logging.log(t.logging.severity.error,"Transaction error.",i),n.error(this,i)},function(n){var i=n[1],t;if(i.type=="upgradeneeded")for(t=0;t<y.length;t++)r.createObjectStore(n[0],y[t],{keyPath:"Id",autoIncrement:!0})})},a?10:1,i):(b=i.transaction(u,f),o.IDBTransaction(b).then(function(i){t.logging.log(t.logging.severity.information,"Transaction completed.",i),n.complete(this,i)},function(i){var r=w(i[1],"transaction");(i[1].type=="abort"||i[1].target&&i[1].target.error&&i[1].target.error.name=="AbortError")&&(r.type="abort",r.severity="abort",r.message="Transaction was aborted"),i[1].target&&i[1].target.errorCode==4&&(r.type="ConstraintError"),r.type=="ConstraintError"&&(r.message="A mutation operation in the transaction failed. For more details look at the error on the instert, update, remove or clear statement."),t.logging.logError(r),n.error(this,r)}),t.logging.log(t.logging.severity.information,"Transaction transaction created.",b),n.progress(b,[b]))}catch(c){if(v=e(c,"transaction"),(c.INVALID_ACCESS_ERR&&c.code==c.INVALID_ACCESS_ERR||c.name=="InvalidAccessError")&&(v.type="InvalidAccessError",v.message="You are trying to open a transaction without providing an object store as scope."),c.NOT_FOUND_ERR&&c.code==c.NOT_FOUND_ERR||c.name=="NotFoundError"||c.type=="property_not_function"){for(g="",d=0;d<y.length;d++)d>0&&(g+=", "),g+=y[d];v.type="NotFoundError",v.message="You are trying to open a transaction for object stores ("+g+"), that doesn't exist."}(c.QUOTA_ERR&&c.code==c.QUOTA_ERR||c.name=="QuotaExceededError")&&(v.type="QuotaExceededError",v.message="The size quota of the indexedDB database is reached."),(c.UNKNOWN_ERR&&c.code==c.UNKNOWN_ERR||c.name=="UnknownError")&&(v.type="UnknownError",v.message="An I/O exception occured."),t.logging.logError(v),n.error(this,v)}},changeDatabaseStructure:function(n,i){return t.promises.promise(function(r){t.logging.log(t.logging.severity.information,"changeDatabaseStructure started",n,i),o.IDBBlockedRequest(n.setVersion(i)).then(function(n){r.complete(this,n)},function(n){r.error(this,n)},function(n){r.progress(this,n)})})},objectStore:function(n,i,r){var s,u;t.logging.log(t.logging.severity.information,"objectStore started",i,r);try{s=i.objectStore(r),t.logging.log(t.logging.severity.information,"objectStore completed",i,s),n.complete(s,[i,s])}catch(o){u=e(o,"objectStore"),(o.NOT_FOUND_ERR&&o.code==o.NOT_FOUND_ERR||o.name=="NotFoundError")&&(u.type="NotFoundError",u.message="You are trying to open an object store ("+r+"), that doesn't exist or isn't in side the transaction scope."),o.name=="TransactionInactiveError"&&(u.type="TransactionInactiveError",u.message="You are trying to open an object store ("+r+") outside a transaction."),t.logging.logError(u),u.type!="TransactionInactiveError"&&f(i),n.error(this,u)}},createObjectStore:function(n,i,u,o){var l,a,c;t.logging.log(t.logging.severity.information,"createObjectStore started",i,u,o);try{i.db.objectStoreNames.contains(u)?r.objectStore(i,u).then(function(i){t.logging.log(t.logging.severity.information,"ObjectStore Found",i[1],u),t.logging.log(t.logging.severity.information,"createObjectStore Promise",i[0],i[1]),n.complete(a,i)},function(t){n.error(this,t)}):(l={},o?(o.keyPath&&(l.keyPath=o.keyPath),l.autoIncrement=o.autoIncrement):l.autoIncrement=!0,a=i.db.createObjectStore(u,l,l.autoIncrement),t.logging.log(t.logging.severity.information,"ObjectStore Created",i,a),r.dbStructureChanged.fire({type:s.objectStoreCreated,data:a}),n.complete(a,[i,a]))}catch(h){c=e(h,"createObjectStore"),(h.INVALID_STATE_ERR&&h.code==h.INVALID_STATE_ERR||h.NOT_ALLOWED_ERR&&h.code==h.NOT_ALLOWED_ERR||h.name=="InvalidStateError")&&(c.type="InvalidStateError",c.message="You are trying to create an object store in a readonly or readwrite transaction."),(h.INVALID_ACCESS_ERR&&h.code==h.INVALID_ACCESS_ERR||h.name=="InvalidAccessError")&&(c.type="InvalidAccessError",c.message="The object store can't have autoIncrement on and an empty string or an array with an empty string as keyPath."),t.logging.logError(c),c.type!="InvalidStateError"&&f(i),n.error(this,c)}},deleteObjectStore:function(n,i,u){t.logging.log(t.logging.severity.information,"deleteObjectStore Promise started",i,u);try{i.db.deleteObjectStore(u),t.logging.log(t.logging.severity.information,"ObjectStore Deleted",u),t.logging.log(t.logging.severity.information,"deleteObjectStore completed",u),r.dbStructureChanged.fire({type:s.objectStoreRemoved,data:u}),n.complete(this,[i,u])}catch(o){var h=e(o,"deleteObjectStore");(o.NOT_FOUND_ERR&&o.code==o.NOT_FOUND_ERR||o.name=="NotFoundError")&&(h.type="NotFoundError",h.message="You are trying to delete an object store ("+u+"), that doesn't exist."),(o.INVALID_STATE_ERR&&o.code==o.INVALID_STATE_ERR||o.NOT_ALLOWED_ERR&&o.code==o.NOT_ALLOWED_ERR||o.name=="InvalidStateError")&&(h.type="InvalidStateError",h.message="You are trying to delete an object store in a readonly or readwrite transaction."),t.logging.logError(h),h.type!="InvalidStateError"&&f(i),n.error(this,h)}},index:function(n,i,u,o){var h,v,s,y;t.logging.log(t.logging.severity.information,"Index started",i,u,o),h=u,u.indexOf(r.indexSuffix)==-1&&(h=h+r.indexSuffix);try{!i.indexNames.contains(h)&&o?setTimeout(function(i){a=!0;var e=k(i.transaction.db)+1,s=i.transaction.db.name,h=i.transaction.mode,c=[i.name],f=i.name;l(i),r.db(s,e).then(function(i){a=!1,r.transaction(i[0],c,h,o).then(function(){},function(t){n.error(this,t)},function(i){r.index(t.core.objectStore(i[0],f),u).then(function(t){n.complete(this,t)},function(t){n.error(this,t)})})},function(t){n.error(this,t)},function(i){var e=i[0],o=i[1];o.type=="upgradeneeded"&&r.createIndex(t.core.objectStore(e,f),u).then(function(){},function(t){n.error(this,t)})})},a?10:1,i):(v=i.index(h),t.logging.log(t.logging.severity.information,"Index completed",i.transaction,v,i),n.complete(this,[i.transaction,v,i]))}catch(c){s=e(c,"index"),y=i.transaction,(c.NOT_FOUND_ERR&&c.code==c.NOT_FOUND_ERR||c.name=="NotFoundError")&&(s.type="NotFoundError",s.message="You are trying to open an index ("+h+"), that doesn't exist."),c.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to open an object store ("+h+") outside a transaction."),t.logging.logError(s),s.type!="TransactionInactiveError"&&f(y),n.error(this,s)}},createIndex:function(n,i,u,o){var l,a,c;t.logging.log(t.logging.severity.information,"createIndex started",i,u,o);try{l=u,u.indexOf(r.indexSuffix)==-1&&(l=l+r.indexSuffix),i.indexNames.contains(l)?r.index(i,u,!1).then(function(t){n.complete(this,t)}):(a=i.createIndex(l,u,{unique:o?o.unique:!1,multiRow:o?o.multirow:!1,multiEntry:o?o.multirow:!1}),t.logging.log(t.logging.severity.information,"createIndex completed",i.transaction,a,i),r.dbStructureChanged.fire({type:s.indexCreated,data:a}),n.complete(this,[i.transaction,a,i]))}catch(h){c=e(h,"createIndex"),(h.INVALID_STATE_ERR&&h.code==h.INVALID_STATE_ERR||h.NOT_ALLOWED_ERR&&h.code==h.NOT_ALLOWED_ERR||h.name=="InvalidStateError")&&(c.type="InvalidStateError",c.message="You are trying to create an index in a readonly or readwrite transaction."),c.type!="InvalidStateError"&&f(i.transaction),t.logging.logError(c),n.error(this,c)}},deleteIndex:function(n,i,u){var c,h;t.logging.log(t.logging.severity.information,"deleteIndex started",i,u),c=u,u.indexOf(r.indexSuffix)==-1&&(c=c+r.indexSuffix);try{i.deleteIndex(c),r.dbStructureChanged.fire({type:s.indexRemoved,data:c}),t.logging.log(t.logging.severity.information,"deleteIndex completed",i.transaction,u,i),n.complete(this,[i.transaction,u,i])}catch(o){h=e(o,"deleteIndex"),(o.NOT_FOUND_ERR&&o.code==o.NOT_FOUND_ERR||o.name=="NotFoundError")&&(h.type="NotFoundError",h.message="You are trying to delete an index ("+c+", propertyName: "+u+" ), that doesn't exist."),(o.INVALID_STATE_ERR&&o.code==o.INVALID_STATE_ERR||o.NOT_ALLOWED_ERR&&o.code==o.NOT_ALLOWED_ERR||o.name=="InvalidStateError")&&(h.type="InvalidStateError",h.message="You are trying to delete an index in a readonly or readwrite transaction."),t.logging.logError(h),h.type!="InvalidStateError"&&f(i.transaction),n.error(this,h)}},cursor:function(n,i,u,s){var v,y,w,a,h;t.logging.log(t.logging.severity.information,"Cursor Promise Started",i),y=[],a=i.transaction||i.objectStore.transaction;try{v=u,v||(v=p!=c.GOOGLE?r.keyRange.lowerBound(0):r.keyRange.lowerBound(parseFloat(0))),w=s?o.IDBCursorRequest(i.openCursor(v,s)):v?o.IDBCursorRequest(i.openCursor(v)):o.IDBCursorRequest(i.openCursor()),w.then(function(i){var r=i[1];t.logging.log(t.logging.severity.information,"Cursor completed",y,a,r),n.complete(this,[y,a,r])},function(i){t.logging.log(t.logging.severity.error,"Cursor error",i),n.error(this,i)},function(i){var r=i[0],u=i[1],o;t.logging.log(t.logging.severity.information,"Cursor progress",r,u),r.value&&(o={data:r.value,key:r.primaryKey,skip:function(i){t.logging.log(t.logging.severity.information,"Cursor skip",r,u);try{r.advance(i)}catch(o){var s=e(o,"cursor - skip");(o.DATA_ERR&&o.code==o.DATA_ERR||o.name=="DataError")&&(s.type="DataError",s.message="The provided range parameter isn't a valid key or key range."),o.name=="TypeError"&&(s.type="TypeError",s.message="The provided count parameter is zero or a negative number."),(o.INVALID_STATE_ERR&&o.code==o.INVALID_STATE_ERR||o.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to skip data on a removed object store."),t.logging.logError(s),f(a),n.error(this,s)}},update:function(i){t.logging.log(t.logging.severity.information,"Cursor update",r,u);try{r.update(i)}catch(o){var s=e(o,"cursor - update");(o.DATA_ERR&&o.code==o.DATA_ERR||o.name=="DataError")&&(s.type="DataError",s.message="The underlying object store uses in-line keys and the property in value at the object store's key path does not match the key in this cursor's position."),(o.READ_ONLY_ERR&&o.code==o.READ_ONLY_ERR||o.name=="ReadOnlyError")&&(s.type="ReadOnlyError",s.message="You are trying to update data in a readonly transaction."),o.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to update data on an inactieve transaction. (The transaction was already aborted or committed)"),(o.DATA_CLONE_ERR&&o.code==o.DATA_CLONE_ERR||o.name=="DataCloneError")&&(s.type="DataCloneError",s.message="The data you are trying to update could not be cloned. Your data probably contains a function which can not be cloned by default. Try using the serialize method to update the data."),(o.INVALID_STATE_ERR&&o.code==o.INVALID_STATE_ERR||o.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to update data on a removed object store."),t.logging.logError(s),h.type!="TransactionInactiveError"&&f(a),n.error(this,s)}},remove:function(){t.logging.log(t.logging.severity.information,"Cursor remove",r,u);try{r["delete"]()}catch(i){var o=e(i,"cursor - delete");(i.READ_ONLY_ERR&&i.code==i.READ_ONLY_ERR||i.name=="ReadOnlyError")&&(o.type="ReadOnlyError",o.message="You are trying to remove data in a readonly transaction."),i.name=="TransactionInactiveError"&&(o.type="TransactionInactiveError",o.message="You are trying to remove data on an inactieve transaction. (The transaction was already aborted or committed)"),(i.INVALID_STATE_ERR&&i.code==i.INVALID_STATE_ERR||i.name=="InvalidStateError")&&(o.type="InvalidStateError",o.message="You are trying to remove data on a removed object store."),t.logging.logError(o),h.type!="TransactionInactiveError"&&f(a),n.error(this,o)}}},n.progress(this,[o,r,u]),y.push({data:o.data,key:o.key})),r["continue"]()})}catch(l){h=e(l,"cursor"),(l.DATA_ERR&&h.code==l.DATA_ERR||l.name=="DataError")&&(h.type="DataError",h.message="The provided range parameter isn't a valid key or key range."),l.name=="TransactionInactiveError"&&(h.type="TransactionInactiveError",h.message="You are trying to retrieve data on an inactieve transaction. (The transaction was already aborted or committed)"),l.name=="TypeError"&&(h.type="TypeError",h.message="The provided directory parameter is invalid"),(l.INVALID_STATE_ERR&&l.code==l.INVALID_STATE_ERR||l.NOT_ALLOWED_ERR&&l.code==l.NOT_ALLOWED_ERR||l.name=="InvalidStateError")&&(h.type="InvalidStateError",h.message="You are trying to insert data on a removed object store."),t.logging.logError(h),h.type!="TransactionInactiveError"&&f(a),n.error(this,h)}},keyCursor:function(n,i,u,s){var v,l,y,a,h;t.logging.log(t.logging.severity.information,"keyCursor Started",i,u,s),v=[],l=i.objectStore.transaction;try{a=u,a||(a=r.keyRange.lowerBound(0)),y=s?o.IDBCursorRequest(i.openKeyCursor(a,s)):o.IDBCursorRequest(i.openKeyCursor(a)),y.then(function(i){var r=i[1];t.logging.log(t.logging.severity.information,"keyCursor completed",v,l,r),n.complete(this,[v,l,r])},function(i){t.logging.log(t.logging.severity.error,"keyCursor error",i),n.error(this,i)},function(r){var u=r[0],o=r[1],s;t.logging.log(t.logging.severity.information,"keyCursor progress",u,o),u.value&&(s={data:u.value,key:u.primaryKey,skip:function(r){t.logging.log(t.logging.severity.information,"keyCursor skip",u,o);try{u.advance(r)}catch(s){var h=e(s,"keyCursor - skip");(s.DATA_ERR&&s.code==s.DATA_ERR||s.name=="DataError")&&(h.type="DataError",h.message="The provided range parameter isn't a valid key or key range."),s.name=="TypeError"&&(h.type="TypeError",h.message="The provided count parameter is zero or a negative number."),(s.INVALID_STATE_ERR&&s.code==s.INVALID_STATE_ERR||s.name=="InvalidStateError")&&(h.type="InvalidStateError",h.message="You are trying to skip data on a removed object store."),t.logging.logError(h),f(i.objectStore.transaction),n.error(this,h)}},update:function(i){t.logging.log(t.logging.severity.information,"keyCursor update",u,o);try{u.update(i)}catch(r){var s=e(r,"keyCursor - update");(r.DATA_ERR&&r.code==r.DATA_ERR||r.name=="DataError")&&(s.type="DataError",s.message="The underlying object store uses in-line keys and the property in value at the object store's key path does not match the key in this cursor's position."),(r.READ_ONLY_ERR&&r.code==r.READ_ONLY_ERR||r.name=="ReadOnlyError")&&(s.type="ReadOnlyError",s.message="You are trying to update data in a readonly transaction."),r.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to update data on an inactieve transaction. (The transaction was already aborted or committed)"),(r.DATA_CLONE_ERR&&r.code==r.DATA_CLONE_ERR||r.name=="DataCloneError")&&(s.type="DataCloneError",s.message="The data you are trying to update could not be cloned. Your data probably contains a function which can not be cloned by default. Try using the serialize method to update the data."),(r.INVALID_STATE_ERR&&r.code==r.INVALID_STATE_ERR||r.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to update data on a removed object store."),t.logging.logError(s),h.type!="TransactionInactiveError"&&f(l),n.error(this,s)}},remove:function(){t.logging.log(t.logging.severity.information,"keyCursor remove",u,o);try{u["delete"]()}catch(i){var r=e(i,"keyCursor - delete");(i.READ_ONLY_ERR&&i.code==i.READ_ONLY_ERR||i.name=="ReadOnlyError")&&(r.type="ReadOnlyError",r.message="You are trying to remove data in a readonly transaction."),i.name=="TransactionInactiveError"&&(r.type="TransactionInactiveError",r.message="You are trying to remove data on an inactieve transaction. (The transaction was already aborted or committed)"),(i.INVALID_STATE_ERR&&i.code==i.INVALID_STATE_ERR||i.name=="InvalidStateError")&&(r.type="InvalidStateError",r.message="You are trying to remove data on a removed object store."),t.logging.logError(r),h.type!="TransactionInactiveError"&&f(l),n.error(this,r)}}},n.progress(this,[s,u,o]),v.push(s.data)),u["continue"]()})}catch(c){h=e(c,"keyCursor"),(c.DATA_ERR&&h.code==c.DATA_ERR||c.name=="DataError")&&(h.type="DataError",h.message="The provided range parameter isn't a valid key or key range."),c.name=="TransactionInactiveError"&&(h.type="TransactionInactiveError",h.message="You are trying to retrieve data on an inactieve transaction. (The transaction was already aborted or committed)"),c.name=="TypeError"&&(h.type="TypeError",h.message="The provided directory parameter is invalid"),(c.INVALID_STATE_ERR&&c.code==c.INVALID_STATE_ERR||c.NOT_ALLOWED_ERR&&c.code==c.NOT_ALLOWED_ERR||c.name=="InvalidStateError")&&(h.type="InvalidStateError",h.message="You are trying to insert data on a removed object store."),t.logging.logError(h),h.type!="TransactionInactiveError"&&f(l),n.error(this,h)}},get:function(n,i,r){t.logging.log(t.logging.severity.information,"Get Started",i);try{o.IDBRequest(i.get(r)).then(function(r){var u=r[0],f=r[1],e=i.transaction||i.objectStore.transaction;t.logging.log(t.logging.severity.information,"Get completed",u,e,f),n.complete(this,[u,e,f])},function(i){t.logging.log(t.logging.severity.error,"Get error",i),n.error(this,i)})}catch(u){var h=i.transaction||i.objectStore.transaction,s=e(u,"get");(s.code==u.DATA_ERR||u.name=="DataError")&&(s.type="DataError",s.message="The provided key isn't a valid key (must be an array, string, date or number)."),u.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to retrieve data on an inactieve transaction. (The transaction was already aborted or committed)"),(u.INVALID_STATE_ERR&&u.code==u.INVALID_STATE_ERR||u.NOT_ALLOWED_ERR&&u.code==u.NOT_ALLOWED_ERR||u.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to retrieve data on a removed object store."),t.logging.logError(s),s.type!="TransactionInactiveError"&&f(h),n.error(this,s)}},count:function(n,i,r){var h,c,s;t.logging.log(t.logging.severity.information,"Count Started",i);try{h=r?i.count(r):i.count(),o.IDBRequest(h).then(function(r){var u=r[0],f=r[1],e=i.transaction||i.objectStore.transaction;t.logging.log(t.logging.severity.information,"Count completed",u,e,f),n.complete(this,[u,e,f])},function(i){t.logging.log(t.logging.severity.error,"Count error",i),n.error(this,i)})}catch(u){c=i.transaction||i.objectStore.transaction,s=e(u,"count"),(s.code==u.DATA_ERR||u.name=="DataError")&&(s.type="DataError",s.message="The provided key isn't a valid key or keyRange."),u.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to count data on an inactieve transaction. (The transaction was already aborted or committed)"),(u.INVALID_STATE_ERR&&u.code==u.INVALID_STATE_ERR||u.NOT_ALLOWED_ERR&&u.code==u.NOT_ALLOWED_ERR||u.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to count data on a removed object store."),t.logging.logError(s),s.type!="TransactionInactiveError"&&f(c),n.error(this,s)}},getKey:function(n,i,r){t.logging.log(t.logging.severity.information,"GetKey Started",i,r);try{o.IDBRequest(i.getKey(r)).then(function(r){var u=r[0],f=r[1];t.logging.log(t.logging.severity.information,"GetKey completed",u,i.objectStore.transaction,f),n.complete(this,[u,i.objectStore.transaction,f])},function(i){t.logging.log(t.logging.severity.error,"GetKey error",i),n.error(this,i)})}catch(u){var s=e(u,"getKey"),h=i.objectStore.transaction;(s.code==u.DATA_ERR||u.name=="DataError")&&(s.type="DataError",s.message="The provided key isn't a valid key or keyRange."),u.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to getKey data on an inactieve transaction. (The transaction was already aborted or committed)"),(u.INVALID_STATE_ERR&&u.code==u.INVALID_STATE_ERR||u.NOT_ALLOWED_ERR&&u.code==u.NOT_ALLOWED_ERR||u.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to getKey data on a removed object store."),t.logging.logError(s),s.type!="TransactionInactiveError"&&f(h),n.error(this,s)}},insert:function(n,i,u,s){var a,c,v,l;t.logging.log(t.logging.severity.information,"Insert Started",i,u,s);try{a=s?o.IDBRequest(i.add(u,s)):o.IDBRequest(i.add(u)),a.then(function(f){var e=f[0],o=f[1];i.keyPath&&(u[i.keyPath]=e),r.dbDataChanged.fire({type:y.dataInserted,data:u,objectStore:i}),t.logging.log(t.logging.severity.information,"Insert completed",u,e,i.transaction,o),n.complete(this,[u,e,i.transaction,o])},function(r){var e=w(r[1],"insert"),o;r[1].target&&r[1].target.errorCode==4&&(e.type="ConstraintError"),e.type=="ConstraintError"&&(o=s,!o&&i.keyPath&&(o=u[i.keyPath]),e.message="A record for the key ("+o+") already exists in the database or one of the properties of the provided data has a unique index declared."),f(i.transaction),t.logging.logError(e),n.error(this,e)})}catch(h){c=e(h,"insert"),v=i.transaction,(c.code==h.DATA_ERR||h.name=="DataError")&&(c.type="DataError",l=s,!l&&i.keyPath&&(l=u[i.keyPath]),l?s&&i.keyPath?c.message="An external key is provided while the object store expects a keyPath key.":typeof l=="string"||typeof l=="number"||typeof l=="Date"||t.util.isArray(l)||(c.message="The provided key isn't a valid key (must be an array, string, date or number)."):c.message="There is no key provided for the data you want to insert for an object store without autoIncrement."),(h.READ_ONLY_ERR&&h.code==h.READ_ONLY_ERR||h.name=="ReadOnlyError")&&(c.type="ReadOnlyError",c.message="You are trying to insert data in a readonly transaction."),h.name=="TransactionInactiveError"&&(c.type="TransactionInactiveError",c.message="You are trying to insert data on an inactieve transaction. (The transaction was already aborted or committed)"),(h.DATA_CLONE_ERR&&h.code==h.DATA_CLONE_ERR||h.name=="DataCloneError")&&(c.type="DataCloneError",c.message="The data you are trying to insert could not be cloned. Your data probably contains a function which can not be cloned by default. Try using the serialize method to insert the data."),(h.INVALID_STATE_ERR&&h.code==h.INVALID_STATE_ERR||h.NOT_ALLOWED_ERR&&h.code==h.NOT_ALLOWED_ERR||h.name=="InvalidStateError")&&(c.type="InvalidStateError",c.message="You are trying to insert data on a removed object store."),t.logging.logError(c),c.type!="TransactionInactiveError"&&f(v),n.error(this,c)}},update:function(n,i,u,s){var a,c,v,l;t.logging.log(t.logging.severity.information,"Update Started",i,u,s);try{a=s?o.IDBRequest(i.put(u,s)):o.IDBRequest(i.put(u)),a.then(function(f){var e=f[0],o=f[1];i.keyPath&&u[i.keyPath]===undefined&&(u[i.keyPath]=e),r.dbDataChanged.fire({type:y.dataUpdated,data:u,objectStore:i}),t.logging.log(t.logging.severity.information,"Update completed",u,e,i.transaction,o),n.complete(this,[u,e,i.transaction,o])},function(r){var u=w(r[1],"update");f(i.transaction),t.logging.logError(u),n.error(this,u)})}catch(h){c=e(h,"update"),v=i.transaction,(c.code==h.DATA_ERR||h.name=="DataError")&&(c.type="DataError",l=s,!l&&i.keyPath&&(l=u[i.keyPath]),l?s&&i.keyPath?c.message="An external key is provided while the object store expects a keyPath key.":typeof l=="string"||typeof l=="number"||typeof l=="Date"||t.util.isArray(l)||(c.message="The provided key isn't a valid key (must be an array, string, date or number)."):c.message="There is no key provided for the data you want to update for an object store without autoIncrement."),(h.READ_ONLY_ERR&&h.code==h.READ_ONLY_ERR||h.name=="ReadOnlyError")&&(c.type="ReadOnlyError",c.message="You are trying to update data in a readonly transaction."),h.name=="TransactionInactiveError"&&(c.type="TransactionInactiveError",c.message="You are trying to update data on an inactieve transaction. (The transaction was already aborted or committed)"),(h.DATA_CLONE_ERR&&h.code==h.DATA_CLONE_ERR||h.name=="DataCloneError")&&(c.type="DataCloneError",c.message="The data you are trying to update could not be cloned. Your data probably contains a function which can not be cloned by default. Try using the serialize method to update the data."),(h.INVALID_STATE_ERR&&h.code==h.INVALID_STATE_ERR||h.NOT_ALLOWED_ERR&&h.code==h.NOT_ALLOWED_ERR||h.name=="InvalidStateError")&&(c.type="InvalidStateError",c.message="You are trying to update data on a removed object store."),t.logging.logError(c),c.type!="TransactionInactiveError"&&f(v),n.error(this,c)}},remove:function(n,i,u){t.logging.log(t.logging.severity.information,"Remove Started",i,u);try{o.IDBRequest(i["delete"](u)).then(function(f){var e=f[0],o=f[1];r.dbDataChanged.fire({type:y.dataRemoved,data:u,objectStore:i}),t.logging.log(t.logging.severity.information,"Remove completed",e,i.transaction,o),n.complete(this,[e,i.transaction,o])},function(i){t.logging.log(t.logging.severity.error,"Remove error",i),n.error(this,i)})}catch(s){var h=e(s,"delete"),c=i.transaction;(s.READ_ONLY_ERR&&s.code==s.READ_ONLY_ERR||s.name=="ReadOnlyError")&&(h.type="ReadOnlyError",h.message="You are trying to remove data in a readonly transaction."),s.name=="TransactionInactiveError"&&(h.type="TransactionInactiveError",h.message="You are trying to remove data on an inactieve transaction. (The transaction was already aborted or committed)"),(s.INVALID_STATE_ERR&&s.code==s.INVALID_STATE_ERR||s.NOT_ALLOWED_ERR&&s.code==s.NOT_ALLOWED_ERR||s.name=="InvalidStateError")&&(h.type="InvalidStateError",h.message="You are trying to remove data on a removed object store."),t.logging.logError(h),h.type!="TransactionInactiveError"&&f(c),n.error(this,h)}},clear:function(n,i){t.logging.log(t.logging.severity.information,"Clear Started",i);try{o.IDBRequest(i.clear()).then(function(u){var f=u[0],e=u[1];r.dbDataChanged.fire({type:y.objectStoreCleared,objectStore:i}),t.logging.log(t.logging.severity.information,"Clear completed",f,i.transaction,e),n.complete(this,[f,i.transaction,e])},function(i){t.logging.log(t.logging.severity.error,"Clear error",i),n.error(this,i)})}catch(u){var s=e(u,"clear"),h=i.transaction;(u.READ_ONLY_ERR&&u.code==u.READ_ONLY_ERR||u.name=="ReadOnlyError")&&(s.type="ReadOnlyError",s.message="You are trying to clear data in a readonly transaction."),u.name=="TransactionInactiveError"&&(s.type="TransactionInactiveError",s.message="You are trying to clear data on an inactieve transaction. (The transaction was already aborted or committed)"),(u.INVALID_STATE_ERR&&u.code==u.INVALID_STATE_ERR||u.NOT_ALLOWED_ERR&&u.code==u.NOT_ALLOWED_ERR||u.name=="InvalidStateError")&&(s.type="InvalidStateError",s.message="You are trying to clear data on a removed object store."),t.logging.logError(s),s.type!="TransactionInactiveError"&&f(h),n.error(this,s)}},deleteDb:function(i,u){try{typeof n.indexedDB.deleteDatabase!="undefined"?o.IDBBlockedRequest(n.indexedDB.deleteDatabase(u)).then(function(n){var f=n[0],e=n[1];r.dbStructureChanged.fire({type:s.databaseRemoved}),t.logging.log(t.logging.severity.information,"Delete Database Promise completed",f,e,u),i.complete(this,[f,e,u])},function(n){var e=n[0],f=n[1];f.currentTarget&&f.currentTarget.errorCode==6?(r.dbStructureChanged.fire({type:s.databaseRemoved}),i.complete(this,[e,f,u])):p==c.SHIM&&f.message=="Database does not exist"?(r.dbStructureChanged.fire({type:s.databaseRemoved}),i.complete(this,[e,f,u])):(t.logging.log(t.logging.severity.error,"Delete Database Promise error",e,f),i.error(this,[e,f]))},function(n){n[0]=="blocked"&&r.dbStructureChanged.fire({type:s.databaseBlocked}),t.logging.log(t.logging.severity.information,"Delete Database Promise blocked",n),i.progress(this,n)}):(t.logging.log(t.logging.severity.information,"Delete Database function not found",u),r.db(u,-1).then(function(n){var t=n[0],f=n[1];r.dbStructureChanged.fire({type:s.databaseRemoved}),i.complete(this,[t,f,u])},function(n){t.logging.log(t.logging.severity.error,"Clear Promise error",n),i.error(this,n)},function(n){var t=n[0],u=n[1],i;if(u.type=="upgradeneeded"){for(i=0;i<t.objectStoreNames.length;i++)r.deleteObjectStore(t.txn,t.objectStoreNames[i]);l(t)}}))}catch(f){t.logging.log(t.logging.severity.exception,"Delete Database Promise exception",f),i.error(this,[f.message,f])}}},r={db:function(n,i){return t.promises.promise(function(t){u.db(t,n,i)})},transaction:function(n,r,f,e){return t.promises.promise(function(t){n.then?n.then(function(n){i?setTimeout(function(){u.transaction(t,n[0],r,f,e)},1):u.transaction(t,n[0],r,f,e)},function(n){t.error(this,n)},function(n){t.progress(this,n)}):i?setTimeout(function(){u.transaction(t,n,r,f,e)},1):u.transaction(t,n,r,f,e)})},objectStore:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(){},function(n){t.error(this,n)},function(n){u.objectStore(t,n[0],i)}):u.objectStore(t,n,i)})},createObjectStore:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(){},function(n){t.error(this,n)},function(n){u.createObjectStore(t,n[0],i,r)}):u.createObjectStore(t,n,i,r)})},deleteObjectStore:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(){},function(n){t.error(this,n)},function(n){u.deleteObjectStore(t,n[0],i)}):u.deleteObjectStore(t,n,i)})},index:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(n){u.index(t,n[1],i,r)},function(n){t.error(this,n)}):u.index(t,n,i,r)})},createIndex:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(n){u.createIndex(t,n[1],i,r)},function(n){t.error(this,n)}):u.createIndex(t,n,i,r)})},deleteIndex:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(n){u.deleteIndex(t,n[1],i)},function(n){t.error(this,n)}):u.deleteIndex(t,n,i)})},cursor:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(n){u.cursor(t,n[1],i,r)},function(n){t.error(this,n)}):u.cursor(t,n,i,r)})},keyCursor:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(n){u.keyCursor(t,n[1],i,r)},function(n){t.error(this,n)}):u.keyCursor(t,n,i,r)})},get:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(n){u.get(t,n[1],i)},function(n){t.error(this,n)}):u.get(t,n,i)})},count:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(n){u.count(t,n[1],i)},function(n){t.error(this,n)}):u.count(t,n,i)})},getKey:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(n){u.getKey(t,n[1],i)},function(n){t.error(this,n)}):u.getKey(t,n,i)})},insert:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(n){u.insert(t,n[1],i,r)},function(n){t.error(this,n)}):u.insert(t,n,i,r)})},update:function(n,i,r){return t.promises.promise(function(t){n.then?n.then(function(n){u.update(t,n[1],i,r)},function(n){t.error(this,n)}):u.update(t,n,i,r)})},remove:function(n,i){return t.promises.promise(function(t){n.then?n.then(function(n){u.remove(t,n[1],i)},function(n){t.error(this,n)}):u.remove(t,n,i)})},clear:function(n){return t.promises.promise(function(t){n.then?n.then(function(n){u.clear(t,n[1])},function(n){t.error(this,n)}):u.clear(t,n)})},deleteDb:function(n){return t.promises.promise(function(t){u.deleteDb(t,n)})},closeDatabaseConnection:l,abortTransaction:f,transactionTypes:h,dbStructureChanged:new t.Event,dbDataChanged:new t.Event,databaseEvents:s,dataEvents:y,implementation:p,implementations:c,indexSuffix:"_Index",keyRange:n.IDBKeyRange};t.core=r}(win,linq2indexedDB,typeof Windows!="undefined"),function(n){function t(t,i,u){var f={autoGenerateAllowed:!0},e,o;if(t&&(f.name=t),i){if(i.version&&(f.version=i.version),i.schema){e=f.version||-1;for(o in i.schema)isNaN(o)||(e=f.version>o?f.version:o);e>-1&&(f.autoGenerateAllowed=!1,f.version=e,f.schema=i.schema)}i.definition&&(f.autoGenerateAllowed=!1,f.definition=i.definition),i.onupgradeneeded&&(f.autoGenerateAllowed=!1,f.onupgradeneeded=i.onupgradeneeded),i.oninitializeversion&&(f.autoGenerateAllowed=!1,f.oninitializeversion=i.oninitializeversion)}Object.defineProperty(this,"dbConfig",{value:f,writable:!1}),n.logging.debug(u),this.initialize(),this.viewer=r(f)}function r(t){function f(){r&&(r=!1,u(i,t))}var i={},r=!0;return i.Configuration={name:t.name,version:t.version,autoGenerateAllowed:t.autoGenerateAllowed,schema:t.schema,definition:t.definition,onupgradeneeded:t.onupgradeneeded,oninitializeversion:t.oninitializeversion},i.refresh=function(){r=!0,f()},n.core.dbStructureChanged.addListener(n.core.databaseEvents.databaseUpgrade,function(){r=!0}),n.core.dbStructureChanged.addListener(n.core.databaseEvents.databaseOpened,function(){f()}),n.core.dbStructureChanged.addListener(n.core.databaseEvents.databaseRemoved,function(){i.name=null,i.version=null,i.ObjectStores=[]}),n.core.dbDataChanged.addListener([n.core.dataEvents.dataInserted,n.core.dataEvents.dataRemoved,n.core.dataEvents.dataUpdated,n.core.dataEvents.objectStoreCleared],function(){i.refresh()}),i}function u(t,i){n.core.db(i.name).then(function(){var i=arguments[0][0],r,u;for(t.name=i.name,t.version=i.version,t.ObjectStores=[],n.core.dbStructureChanged.addListener(n.core.databaseEvents.databaseBlocked,function(){n.core.closeDatabaseConnection(i)}),r=[],u=0;u<i.objectStoreNames.length;u++)r.push(i.objectStoreNames[u]);r.length>0&&n.core.transaction(i,r,n.core.transactionTypes.READ_ONLY,!1).then(null,null,function(){for(var u=arguments[0][0],r=0;r<i.objectStoreNames.length;r++)n.core.objectStore(u,i.objectStoreNames[r]).then(function(){for(var i=arguments[0][1],u=[],f=[],r=0;r<i.indexNames.length;r++)n.core.index(i,i.indexNames[r],!1).then(function(){var t=arguments[0][1],i=[];n.core.cursor(t).then(null,null,function(){var n=arguments[0][0],t=arguments[0][1].primaryKey;i.push({key:t,data:n})}),u.push({name:t.name,keyPath:t.keyPath,multiEntry:t.multiEntry,data:i})});n.core.cursor(i).then(null,null,function(){var n=arguments[0][0],t=arguments[0][1].primaryKey;f.push({key:t,data:n})}),t.ObjectStores.push({name:i.name,keyPath:i.keyPath,autoIncrement:i.autoIncrement,indexes:u,data:f})})})},null,function(t){t[1].type=="upgradeneeded"&&n.core.abortTransaction(t[0])})}function f(n,t){for(var r=null,i=0;i<t.length;i++)parseInt(t[i].version)==parseInt(n)&&(r=t[i]);return r}function e(t,i){var e,f,o,r,s,u;try{if(i.objectStores)for(e=0;e<i.objectStores.length;e++)f=i.objectStores[e],f.remove?n.core.deleteObjectStore(t,f.name):n.core.createObjectStore(t,f.name,f.objectStoreOptions);if(i.indexes)for(o=0;o<i.indexes.length;o++)r=i.indexes[o],r.remove?n.core.deleteIndex(n.core.objectStore(t,r.objectStoreName),r.propertyName):n.core.createIndex(n.core.objectStore(t,r.objectStoreName),r.propertyName,r.indexOptions);if(i.defaultData)for(s=0;s<i.defaultData.length;s++)u=i.defaultData[s],u.remove?n.core.remove(n.core.objectStore(t,u.objectStoreName),u.key):n.core.update(n.core.objectStore(t,u.objectStoreName),u.data,u.key)}catch(h){n.logging.log(n.logging.severity.exception,"initialize version exception: ",h),n.core.abortTransaction(t)}}function i(n,t,i,r){var u,o;if(n.onupgradeneeded)n.onupgradeneeded(r,t,i);if(n.oninitializeversion||n.schema||n.definition)for(u=t+1;u<=i;u++)if(n.schema&&n.schema[u](r),n.definition)o=f(u,n.definition),o&&e(r,o);else if(n.oninitializeversion)n.oninitializeversion(r,u)}t.prototype=function(){function l(n){var t=this;return{where:function(i){return f(new r(n,t.dbConfig),i,!0,!1)},orderBy:function(i){return u(new r(n,t.dbConfig),i,!1)},orderByDesc:function(i){return u(new r(n,t.dbConfig),i,!0)},select:function(i){return e(new r(n,t.dbConfig),i)},insert:function(i,u){return a(new r(n,t.dbConfig),i,u)},update:function(i,u){return v(new r(n,t.dbConfig),i,u)},merge:function(i,u){return h(new r(n,t.dbConfig),i,u)},remove:function(i){return c(new r(n,t.dbConfig),i)},clear:function(){return y(new r(n,t.dbConfig))},get:function(i){return p(new r(n,t.dbConfig),i)}}}function f(t,i,r,u,e){var c={},h,o;if(e==="undefined"&&(c.not=function(){return f(t,i,r,u,!0)}),typeof i=="function")return h={propertyName:i,isOrClause:u,isAndClause:r,isNotClause:e==="undefined"?!1:e,filter:n.linq.createFilter("anonymous"+t.where.length,i,null)},s(t,h);if(typeof i=="string")for(o in n.linq.filters){if(h={propertyName:i,isOrClause:u,isAndClause:r,isNotClause:typeof e=="undefined"?!1:e,filter:n.linq.filters[o]},typeof n.linq.filters[o].filter!="function")throw"Linq2IndexedDB: a filter methods needs to be provided for the filter '"+o+"'";if(typeof n.linq.filters[o].name=="undefined")throw"Linq2IndexedDB: a filter name needs to be provided for the filter '"+o+"'";c[n.linq.filters[o].name]=n.linq.filters[o].filter(s,t,h)}return c}function s(n,t){return n.where.push(t),{and:function(t){return f(n,t,!0,!1)},or:function(t){return f(n,t,!1,!0)},orderBy:function(t){return u(n,t,!1)},orderByDesc:function(t){return u(n,t,!0)},select:function(t){return e(n,t)},remove:function(){return c(n)},merge:function(t){return h(n,t)}}}function u(n,t,i){return n.sortClauses.push({propertyName:t,descending:i}),{orderBy:function(t){return u(n,t,!1)},orderByDesc:function(t){return u(n,t,!0)},select:function(t){return e(n,t)}}}function e(i,r){if(r){n.util.isArray(r)||(r=[r]);for(var u=0;u<r.length;u++)i.select.push(r[u])}return n.promises.promise(function(r){var u=[];t(i,n.core.transactionTypes.READ_WRITE,o).then(function(){r.complete(this,u)},r.error,function(n){var t=b(n[0].data,i.select);u.push(t),r.progress(this,t)})})}function a(i,r,u){return i.insert.push({data:r,key:u}),t(i,n.core.transactionTypes.READ_WRITE,function(t,i,r){var e=n.core.objectStore(r,t.from),u,f;if(n.util.isArray(t.insert[0].data)&&!t.insert[0].key)for(u=[],f=0;f<t.insert[0].data.length;f++)n.core.insert(e,t.insert[0].data[f]).then(function(n){i.progress(this,{object:n[0],key:n[1]}),u.push({object:n[0],key:n[1]}),u.length==t.insert[0].data.length&&i.complete(this,u)},i.error);else n.core.insert(e,t.insert[0].data,t.insert[0].key).then(function(n){i.complete(this,{object:n[0],key:n[1]})},i.error)})}function v(i,r,u){return i.update.push({data:r,key:u}),t(i,n.core.transactionTypes.READ_WRITE,function(t,i,r){n.core.update(n.core.objectStore(r,t.from),t.update[0].data,t.update[0].key).then(function(n){i.complete(this,{object:n[0],key:n[1]})},i.error)})}function h(i,r,u){if(i.merge.push({data:r,key:u}),u)return t(i,n.core.transactionTypes.READ_WRITE,function(t,i,r){var f=n.core.objectStore(r,t.from),u=null;n.core.cursor(f,n.core.IDBKeyRange.only(t.merge[0].key)).then(function(){},i.error,function(n){u=n[0].data;for(var r in t.merge[0].data)u[r]=t.merge[0].data[r];n[0].update(u),i.complete(this,u)},i.error)});var f=[];return n.promises.promise(function(r){t(i,n.core.transactionTypes.READ_WRITE,o).then(function(u){f.length>0?r.complete(this,f):t(i,n.core.transactionTypes.READ_WRITE,function(t,e,o){n.core.objectStore(o,t.from).then(function(t){for(var s,h,o=0;o<u.length;o++){s=u[o];for(h in i.merge[0].data)s[h]=i.merge[0].data[h];n.core.update(t[1],s).then(function(n){r.progress(this,n[0]),f.push(n[0]),f.length==u.length&&e.complete(this,f)},e.error)}},e.error)}).then(r.complete,r.error,r.progress)},null,function(n){var t,u;if(n[0].update){t=n[0].data;for(u in i.merge[0].data)t[u]=i.merge[0].data[u];n[0].update(t),r.progress(this,t),f.push(t)}})})}function c(i,r){if(r)return i.remove.push({key:r}),t(i,n.core.transactionTypes.READ_WRITE,function(t,r,u){n.core.remove(n.core.objectStore(u,t.from),t.remove[0].key).then(function(){r.complete(this,i.remove[0].key)},r.error)});var u=!1;return n.promises.promise(function(r){t(i,n.core.transactionTypes.READ_WRITE,o).then(function(f){u?r.complete(this):t(i,n.core.transactionTypes.READ_WRITE,function(t,i,u){n.core.objectStore(u,t.from).then(function(t){for(var e=0,u=0;u<f.length;u++)n.core.remove(t[1],n.json.getPropertyValue(f[u],t[1].keyPath)).then(function(n){r.progress(this,n[0]),++e==f.length&&i.complete(this)},i.error)},i.error)}).then(r.complete,r.error,r.progress)},null,function(n){n[0].remove&&(n[0].remove(),r.progress(this),u=!0)})})}function y(i){return i.clear=!0,t(i,n.core.transactionTypes.READ_WRITE,function(t,i,r){n.core.clear(n.core.objectStore(r,t.from)).then(function(){i.complete(this)},i.error)})}function p(i,r){return i.get.push({key:r}),t(i,n.core.transactionTypes.READ_ONLY,function(t,i,r){n.core.get(n.core.objectStore(r,t.from),t.get[0].key).then(function(n){i.complete(this,n[0])},i.error)})}function t(t,r,u){return n.promises.promise(function(f){n.core.db(t.dbConfig.name,t.dbConfig.version).then(function(i){n.core.transaction(i[0],t.from,r,t.dbConfig.autoGenerateAllowed).then(function(t){var i=t[0];n.core.closeDatabaseConnection(i)},f.error,function(n){u(t,f,n[0])})},f.error,function(n){var u=n[0],r=n[1];r.type=="upgradeneeded"&&i(t.dbConfig,r.oldVersion,r.newVersion,u)})})}function o(t,i,r){n.core.objectStore(r,t.from).then(function(r){try{var o=r[1],u=t.where||[],f=[],s=w(o,u,t.dbConfig);s.then(function(r){var e=r[0];n.workers.worker(e,u,t.sortClauses).then(function(n){if(f.length==0)for(var t=0;t<n.length;t++)i.progress(this,[n[t]]);i.complete(this,n)})},i.error,function(n){u.length==0&&t.sortClauses.length==0&&(f.push({data:n[0].data,key:n[0].key}),i.progress(this,n))})}catch(e){n.core.abortTransaction(r[0]),i.error(this,[e.message,e])}},i.error)}function w(t,i,r){var f,e,o,u;if(i.length>0&&!i[0].isNotClause&&i[0].filter.indexeddbFilter&&(i.length==1||i.length>1&&!i[1].isOrClause))if(e=t,o=r.autoGenerateAllowed||t.indexNames.contains(i[0].propertyName+n.core.indexSuffix),i[0].propertyName!=t.keyPath&&o&&(e=n.core.index(t,i[0].propertyName,r.autoGenerateAllowed)),i[0].propertyName==t.keyPath||o){u=i.shift();switch(u.filter){case n.linq.filters.equals:f=n.core.cursor(e,n.core.keyRange.only(u.value));break;case n.linq.filters.between:f=n.core.cursor(e,n.core.keyRange.bound(u.minValue,u.maxValue,u.minValueIncluded,u.maxValueIncluded));break;case n.linq.filters.greaterThan:f=n.core.cursor(e,n.core.keyRange.lowerBound(u.value,u.valueIncluded));break;case n.linq.filters.smallerThan:f=n.core.cursor(e,n.core.keyRange.upperBound(u.value,u.valueIncluded));break;default:f=n.core.cursor(e)}}else f=n.core.cursor(e);else f=n.core.cursor(t);return f}function b(t,i){var u,r;if(i&&i.length>0){for(n.util.isArray(i)||(i=[i]),u={},r=0;r<i.length;r++)n.json.setPropertyValue(u,i[r],n.json.getPropertyValue(t,i[r]));return u}return t}function k(){var t=this,r=t.dbConfig,o,u,s,f,e;if(typeof r.definition!="undefined")for(o=r.definition.sort(n.json.comparer("version",!1).sort),u=0;u<o.length;u++)for(s=o[u],f=0;f<s.objectStores.length;f++)e=s.objectStores[f],t[e.name]=e.remove?undefined:t.from(e.name);return n.logging.log(n.logging.severity.information,"Initialize Started"),n.promises.promise(function(u){n.core.db(r.name,r.version).then(function(i){for(var f=i[0],e,r=0;r<f.objectStoreNames.length;r++)e=f.objectStoreNames[r],t[e]=t.from(e);n.logging.log(n.logging.severity.information,"Close dbconnection"),f.close(),n.logging.log(n.logging.severity.information,"Initialize Succesfull"),u.complete()},u.error,function(n){var u=n[0],t=n[1];t.type=="upgradeneeded"&&i(r,t.oldVersion,t.newVersion,u)})})}function d(){var t=this.dbConfig;return n.promises.promise(function(i){n.core.deleteDb(t.name).then(function(){i.complete()},i.error)})}var r=function(n,t){this.from=n,this.where=[],this.select=[],this.sortClauses=[],this.get=[],this.insert=[],this.merge=[],this.update=[],this.remove=[],this.clear=!1,this.dbConfig=t};return r.prototype={executeQuery:function(){t(this)}},{deleteDatabase:d,initialize:k,from:l}}(),n.DbContext=t}(linq2indexedDB),function(n){function t(n,t,i,r,u){if(typeof n=="undefined")throw"linq2IndexedDB: No name argument provided to the addFilter method.";if(typeof n!="string")throw"linq2IndexedDB: The name argument provided to the addFilterObject method must be a string.";if(typeof r=="undefined")throw"linq2IndexedDB: No isValid argument provided to the addFilter method.";if(typeof r!="function")throw"linq2IndexedDB: The isValid argument provided to the addFilterObject method must be a function.";if(typeof u=="undefined")throw"linq2IndexedDB: No filterCallback argument provided to the addFilter method.";return{name:n,indexeddbFilter:t,sortOrder:i,isValid:r,filter:u}}function i(n){if(typeof r[n.name]!="undefined")throw"linq2IndexedDB: A filter with the name '"+n.name+"' already exists.";r[n.name]=n}var r={},u=t("equals",!0,0,function(t,i){return n.json.getPropertyValue(t,i.propertyName)==i.value},function(n,t,i){return function(r){if(typeof r=="undefined")throw"linq2indexedDB: value needs to be provided to the equal clause";return i.value=r,n(t,i)}}),f=t("between",!0,1,function(t,i){var r=n.json.getPropertyValue(t,i.propertyName);return(r>i.minValue||i.minValueIncluded&&r==i.minValue)&&(r<i.maxValue||i.maxValueIncluded&&r==i.maxValue)},function(n,t,i){return function(r,u,f,e){var o=typeof f=="undefined"?!1:f,s=typeof e=="undefined"?!1:e;if(typeof r=="undefined")throw"linq2indexedDB: minValue needs to be provided to the between clause";if(typeof u=="undefined")throw"linq2indexedDB: maxValue needs to be provided to the between clause";return i.minValue=r,i.maxValue=u,i.minValueIncluded=o,i.maxValueIncluded=s,n(t,i)}}),e=t("greaterThan",!0,2,function(t,i){var r=n.json.getPropertyValue(t,i.propertyName);return r>i.value||i.valueIncluded&&r==i.value},function(n,t,i){return function(r,u){if(typeof r=="undefined")throw"linq2indexedDB: value needs to be provided to the greatherThan clause";var f=typeof u=="undefined"?!1:u;return i.value=r,i.valueIncluded=f,n(t,i)}}),o=t("smallerThan",!0,2,function(t,i){var r=n.json.getPropertyValue(t,i.propertyName);return r<i.value||i.valueIncluded&&r==i.value},function(n,t,i){return function(r,u){if(typeof r=="undefined")throw"linq2indexedDB: value needs to be provided to the smallerThan clause";var f=typeof u=="undefined"?!1:u;return i.value=r,i.valueIncluded=f,n(t,i)}}),s=t("inArray",!1,3,function(t,i){var r=n.json.getPropertyValue(t,i.propertyName);return r?i.value.indexOf(r)>=0:!1},function(n,t,i){return function(r){if(typeof r=="undefined"||r.push==="undefined")throw"linq2indexedDB: array needs to be provided to the inArray clause";return i.value=r,n(t,i)}}),h=t("like",!1,4,function(t,i){var r=n.json.getPropertyValue(t,i.propertyName);return r?r.indexOf(i.value)>=0:!1},function(n,t,i){return function(r){if(typeof r=="undefined")throw"linq2indexedDB: value needs to be provided to the like clause";return i.value=r,n(t,i)}}),c=t("isUndefined",!1,5,function(t,i){return n.json.getPropertyValue(t,i.propertyName)===undefined},function(n,t,i){return function(){return n(t,i)}});i(u),i(f),i(e),i(o),i(s),i(h),i(c),n.linq={addFilter:function(n,t,r){i(this.createFilter(n,t,r))},createFilter:function(n,i,r){return t(n,!1,99,i,r)},filters:r}}(linq2indexedDB),function(n,t,i){function u(u,f,e){return t.promises.promise(function(o){var s,h;typeof n!="undefined"&&typeof n.Worker!="undefined"?(s=new Worker(t.workers.location),s.onmessage=function(n){o.complete(this,n.data),s.terminate()},s.onerror=o.error,h=i.stringify(f,t.json.serialize),s.postMessage({data:u,filters:h,sortClauses:e})):o.complete(this,r(u,f,e))})}function r(n,t,i){for(var u=[],r=0;r<n.length;r++)f(n[r].data,t)&&(u=e(u,n[r],i));return u}function f(n,t){for(var r=!0,u,i=0;i<t.length;i++)u=t[i].filter.isValid(n,t[i]),t[i].isNotClause&&(u=!u),t[i].isAndClause?r=r&&u:t[i].isOrClause&&(r=r||u);return r}function e(n,i,r){var u=[],o,e,c,l,f,s,h;if(n.length==0||r.length==0)u=n,u.push(i);else{for(o=!1,e=0;e<n.length;e++)for(c=n[e].data,l=i.data,f=0;f<r.length;f++)s=t.json.getPropertyValue(c,r[f].propertyName),h=t.json.getPropertyValue(l,r[f].propertyName),s!=h?r[f].descending&&s>h||!r[f].descending&&s<h?u.push(n[e]):(o||(o=!0,u.push(i)),u.push(n[e])):f==r.length-1&&u.push(n[e]);o||u.push(i)}return u}typeof n=="undefined"&&(self.onmessage=function(n){var u=n.data.data,f=n.data.filters||"[]",e=n.data.sortClauses||[],o=i.parse(f,t.json.deserialize),s=r(u,o,e);postMessage(s);return}),t.workers={location:"/Scripts/Linq2IndexedDB.js",worker:u}}(win,linq2indexedDB,JSON)